<!-- xml reconstructed by ValveResourceFormat: https://vrf.steamdb.info/ -->
<root>
	<styles>
		<include src="file://{resources}/styles/custom_game/dotastyles.css" />
		<include src="file://{resources}/styles/custom_game/shared_scoreboard_styles.css" />
		<include src="file://{resources}/styles/custom_game/multiteam_flyout_scoreboard.css" />
	</styles>
	<script><![CDATA[
		function ToggleMute()
		{
			var playerId = $.GetContextPanel().GetAttributeInt( "player_id", -1 );
			if ( playerId !== -1 )
			{
				var newIsMuted = !Game.IsPlayerMuted( playerId );
				Game.SetPlayerMuted( playerId, newIsMuted );
				$.GetContextPanel().SetHasClass( "player_muted", newIsMuted );
				$.GetContextPanel().custom_mute = newIsMuted;
		
				GameEvents.SendCustomGameEventToServer("set_mute_player", { disable: newIsMuted, toPlayerId: playerId } );
			}
		}

		function ToggleDisableHelp()
		{
			var playerId = $.GetContextPanel().GetAttributeInt( "player_id", -1 );
			if ( playerId !== -1 )
			{
				var disable = $("#DisableHelpButton").checked;
				GameEvents.SendCustomGameEventToServer("set_disable_help", { disable: disable, to: playerId } );
			}
		}


		function RefreshMuteAndDisableHelpList()
		{
			var playerId = $.GetContextPanel().GetAttributeInt( "player_id", -1 );
			$.GetContextPanel().SetHasClass( "player_muted", Game.IsPlayerMuted( playerId ) );

			var disableHelp = CustomNetTables.GetTableValue("disable_help", Players.GetLocalPlayer());
			if (disableHelp && disableHelp[playerId]) {
				$("#DisableHelpButton").checked = true;
			}
			var teamates = Game.GetAllTeamIDs()
			for (var key in teamates) {
				key = parseInt(key)
				GameEvents.SendCustomGameEventToServer("set_mute_player", { disable: Game.IsPlayerMuted(key), toPlayerId: key } );
			}
		}

		RefreshMuteAndDisableHelpList();

		function ToggleMuteItem( event_data )
		{
			var playerId = $.GetContextPanel().GetAttributeInt( "player_id", -1 );
			if (playerId == event_data["to"])
			{
				var newIsMuted = (event_data["mute"] == 1)
				Game.SetPlayerMuted( playerId, newIsMuted );
				$.GetContextPanel().SetHasClass( "player_muted", newIsMuted );
			}
		}

		function ShowPlayerPerk( event_data )
		{
			var playerId = $.GetContextPanel().GetAttributeInt( "player_id", -1 );
			if (playerId == event_data.playerId){
				const perkImage = $("#PerkForPlayer");
				perkImage.SetImage("file://{resources}/layout/custom_game/common/game_perks/icons/"+event_data.perkName+".png");
				perkImage.SetPanelEvent( "onmouseover", function() {
					$.DispatchEvent( 'DOTAShowTextTooltip', perkImage, $.Localize("#DOTA_Tooltip_"+event_data.perkName));
				})
			}
		}

		GameEvents.Subscribe("set_disable_help_refresh", RefreshMuteAndDisableHelpList);
		GameEvents.Subscribe("set_mute_refresh", ToggleMuteItem);
		GameEvents.Subscribe("game_perks:show_player_perk", ShowPlayerPerk);
	]]></script>
	<Panel class="PlayerRow">
		<Panel id="PlayerRowContainer">
			<Panel id="Hero" class="ScoreCol_Hero ScoreboardPanel">
				<Image id="HeroIcon" heroimagestyle="landscape" scaling="stretch-to-fit-preserve-aspect" />
			</Panel>
			<Panel id="PlayerDetailsContainer" class="ScoreCol_PlayerDetails ScoreboardPanel">
				<Panel id="PlayerAndHeroName">
					<Label id="PlayerName" text="AAAAA" />
					<Label id="HeroNameAndDescription" text="#custom_scoreboard_hero_name_and_desc" />
				</Panel>
				<!--<Label id="TeammateGoldAmount" text="999" /> -->
				<!--<ToggleButton id="DisableHelpButton" onactivate="ToggleDisableHelp();" onmouseover="DOTAShowTextTooltip(Disable Help)" onmouseout="DOTAHideTextTooltip()" /> -->
				<Button id="MuteButton" onactivate="ToggleMute();" />
			</Panel>
			<Panel id="TeamScoreSpace" class="ScoreCol_TeamScore" />
			<Panel id="KillsContainer" class="ScoreCol_Kills ScoreboardPanel">
				<Label id="Kills" text="999" />
			</Panel>
			<Panel id="DeathsContainer" class="ScoreCol_Deaths ScoreboardPanel">
				<Label id="Deaths" text="999" />
			</Panel>
			<Panel id="AssistsContainer" class="ScoreCol_Assists ScoreboardPanel">
				<Label id="Assists" text="999" />
			</Panel>
			<Panel id="NeutralItemWrap" class="ScoreboardPanel">
				<DOTAItemImage id="NeutralItem" />
			</Panel>
			<!-- <Panel id="PerkForPlayerWrap" class="ScoreboardPanel">
				<Image id="PerkForPlayer" onmouseover="DOTAShowTextTooltip(#cannot_see_perk_now)" onmouseout="DOTAHideTextTooltip()" />
			</Panel> -->
		</Panel>
		<Panel id="UltimateIndicatorBG" class="UltimateIndicatorShared" />
		<Panel id="UltimateIndicator" class="UltimateIndicatorShared" />
	</Panel>
</root>
